function parPredict_riskPref(model, params, dist, nIters)


if strcmpi(model, 'RW')
    countalpha = 0; countbeta = 0;
    for ialpha = params.alpha
            countalpha = countalpha + 1;
            countbeta  = 0;
            
        for ibeta = params.beta
            countbeta  = countbeta + 1;
            params2run.alpha = ialpha;
            params2run.beta  = ibeta;
            params2run.Q0    = params.Q0;
            [Qall{countalpha, countbeta}, choiceType{countalpha, countbeta}, totalStim{countalpha, countbeta}]...
                = sim_RW_riskPref(params2run, dist, nIters);
%       
        end
    end

%         paramNames = {'alpha', 'beta', 'Q0'}
%         params2run.alpha = [params.alpha(iparam)];
%         params2run.beta  = [params.beta(iparam)];
%         params2run.Q0    = [params.Q0];
%         [Qall{iparam}, choiceType{iparam}, totalStim{iparam}] = sim_RW_riskPref(params2run, dist, nIters);
%       
%         [all, ~] = calculate_riskPref(choiceType{iparam}, totalStim{iparam});
%         % generate a simulation mean +/- SEM
%         for itype = 1:2
% 
%             mean2plot_risk(iparam, itype) = nanmean(all{itype});
%             sem2plot_risk(iparam, itype)  = nanstd(all{itype})./sqrt(length(all{itype}));
% 
% 
%         end
%         figure(1);
%         h1 = subplot(2, 1, 1); %Q estimates
%         h2 = subplot(2, 1, 2); %P(risky) estimates
%         if strcmp(dist, 'Gaussian')
%             col2plot = {[0.83 0.71 0.98], [0.62 0.35 0.99]};
%         else
%             col2plot = {[0.58 0.99 0.56], [0.19 0.62 0.14]};
%         end
% 
%         for istim = 1:4
%             mean2plot{iparam}{istim} = nanmean(Qall{iparam}{istim});
%             sem2plot{istim}  = nanstd(Qall{iparam}{istim})./sqrt(length((Qall{iparam}{istim})));
%             axes(h1);
%             hold on 
%             if (istim == 1 || istim == 3) %safe stimuli 
%                 lin2plot = '--';
%             else 
%                 lin2plot = '-';
%             end
%             if (istim == 1 | istim == 2)
%                 plot([1:120], mean2plot{istim}, 'color', col2plot{1}, 'lineStyle', lin2plot, 'LineWidth', 1.2);
%             else
%                 plot([1:120], mean2plot{istim}, 'color', col2plot{2}, 'lineStyle', lin2plot, 'LineWidth', 1.2);
%             end
%     
%         end
% 
%     end
%     for itype = 1:2
%         axes(h2);
%         hold on
%         errorbar(mean2plot_risk(:, itype), sem2plot_risk(:, itype), 'color', col2plot{itype},...
%             'Marker', 'o', 'MarkerFaceColor', col2plot{itype}, 'linew', 1.2);
%     end
% 
% end
% if strcmpi(model, 'RATES')
%     [Qall, choiceType, totalStim] = sim_RATES_riskPref(params, dist, nIters);
%     plot_riskPref(choiceType, totalStim, Qall, [], model, dist, params);
% end
% if strcmpi(model, 'UCB')
%     [Qall, choiceType, totalStim] = sim_UCB_riskPref(params, dist, nIters);
%     plot_riskPref(choiceType, totalStim, Qall, [], model, dist, params);
% end
% if strcmpi(model, 'PEIRS')
%     [Qall, Sall, choiceType, totalStim] = sim_PEIRS_riskPref(params, dist, nIters);
%     plot_riskPref(choiceType, totalStim, Qall, Sall, model, dist, params);
% end

end
